generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum BackgroundType {
  Color
  Image
}

enum Visibility {
  Public
  Private
}

enum UserRole {
  User
  Admin
}

enum MemberFieldType {
  String
  Color
  Date
  Month
  Year
  MonthYear
  Timestamp
  MonthDay
}

enum UserVerificationType {
  Email
  PasswordReset
}

// this is just a dummy model for Prisma to generate a dummy delegate that
// the PrismaRepository can extend
model BaseModel {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  @@map("_internal")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  username String @unique

  email         String?
  emailVerified Boolean @default(false)

  system System?

  passwordHash String

  pluralAccessToken String?
  pluralOverride    String?

  role UserRole @default(User)

  pages Page[]

  verifications UserVerification[]

  @@map("pluraliapp_users")
}

model UserVerification {
  id   String               @id @default(auto()) @map("_id") @db.ObjectId
  type UserVerificationType

  createdAt DateTime  @default(now())
  expiresAt DateTime?

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  @@map("pluraliapp_users_verifications")
}

model System {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  slug String?

  pluralId String @unique

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique @db.ObjectId

  members Member[]
  fields  Field[]

  visibility Visibility @default(Private)

  backgroundType  BackgroundType @default(Color)
  backgroundColor String?
  backgroundImage String?

  description String?

  assetsUpdatedAt DateTime @default(now())

  @@map("pluraliapp_systems")
}

model Field {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  pluralId       String @unique
  pluralParentId String

  name     String
  position Int             @default(0)
  type     MemberFieldType

  system   System @relation(fields: [systemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  systemId String @db.ObjectId

  visibility Visibility @default(Private)

  @@map("pluraliapp_systems_fields")
}

model Member {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  slug String?

  pluralId       String @unique
  pluralParentId String

  system   System @relation(fields: [systemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  systemId String @db.ObjectId

  visibility Visibility @default(Private)

  backgroundType  BackgroundType @default(Color)
  backgroundColor String?
  backgroundImage String?

  description String?

  assetsUpdatedAt DateTime @default(now())

  @@map("pluraliapp_systems_members")
}

enum OwnerType {
  Member
  System
}

model Page {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  slug String?

  ownerId   String // attach to pluralId to bind to member/system
  ownerType OwnerType

  name    String
  content String

  visibility Visibility

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @db.ObjectId

  @@map("pluraliapp_pages")
}
